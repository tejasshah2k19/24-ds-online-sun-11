Array 
function 
structure 
------------------------------------------
C -> lang 
tools-> TC , VScode
------------------------------------------

DS -> 

10  20  30  40  50  


search = 30 

logic -> code 


server -> 10K users -> search 

1) time complexity -> time  ? 10 20 25 50 
2) space complexity -> memory ->  

--------------------------------------------
n=200
for(i=1;i<=n;i++){
    printf("%d",i);
}

 
100  
1000
200

n time 
------------------------------------------


int a = 5; 

for(i=1;i<=a;i++){//1 2 3 
    for(j=1;j<=i;j++){//1 
        printf("%d",j);
    }
}
->25{X} 

->15{correct} 

->n*n{X}


i   j
1   1 
2   12
3   123 
4   1234
5   12345 

---------------------------------------------

int n = 5; 

for(i=1;i<=n;i++){
    for(j=1;j<=n;j++){
        printf("%d",j);
    }
}

25{correct}

i   j   
1   12345 
2   12345
3   12345
4   12345
5   12345
---------------------------------------------
int search = 7; 

int a[]={1,2,3,4,5,6,7,8,9,0};

for(i=0;i<10;i++){
    if(a[i] == search){
        break; 
    }
}

7{C}
8{X}
9{X}

i
0
1
2
3
4
5
6
-------------------------------------------------------------------


for(i=5;i<=20;i++){
    for(j=5;j<=20;j++){

        if(i%j == 0 ){  0  
            break; 
        }
    }
}

1 
30
225
7
91


i   j   
5   5   break; 
6   56  break; 
7   567 break; 
8   5678
9   56789
10  5   break; 
11  567891011 


--------------------------------------------------------------------

DS -> aLgo -> 

    time complexity -> 
code -> output-> 


                                DS 
    Linear DS                                   Non Linear 
   Array                                        Tree  
   Stack                                        Graph 
   Queue 
   LinkedList 

    searching 
    sorting 

 ------------------------------------------------------------------------------                   



























